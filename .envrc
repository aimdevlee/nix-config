# direnv configuration for nix-darwin development
# Automatically loads the development shell when entering the directory

# Use the flake's devShell
use flake

# Set up convenient environment variables
export NIX_CONFIG_DIR="/private/etc/nix-darwin"
export FLAKE_PATH="."

# Detect current user for display purposes
export CURRENT_USER="$(echo $HOME | awk -F'/' '{print $NF}')"

# Function for interactive profile selection
select_profile() {
  echo ""
  echo "🔧 Nix-Darwin Profile Selection"
  echo "================================"
  echo "Current user: $CURRENT_USER"
  echo ""
  echo "Please select your profile:"
  echo "1) personal - Personal development environment"
  echo "2) work     - Work environment"
  echo "3) skip     - Don't set a profile now"
  echo ""
  
  read -p "Enter your choice (1-3): " choice
  
  case "$choice" in
    1)
      export TARGET="personal"
      echo ""
      read -p "Save this as default? (y/n): " save_choice
      if [[ "$save_choice" =~ ^[Yy]$ ]]; then
        echo "export TARGET=personal" > .envrc.local
        echo "✅ Saved 'personal' as default profile in .envrc.local"
        export TARGET_SOURCE="saved default"
      else
        export TARGET_SOURCE="session only"
      fi
      ;;
    2)
      export TARGET="work"
      echo ""
      read -p "Save this as default? (y/n): " save_choice
      if [[ "$save_choice" =~ ^[Yy]$ ]]; then
        echo "export TARGET=work" > .envrc.local
        echo "✅ Saved 'work' as default profile in .envrc.local"
        export TARGET_SOURCE="saved default"
      else
        export TARGET_SOURCE="session only"
      fi
      ;;
    3)
      echo "⏭️  Skipping profile selection"
      export TARGET=""
      export TARGET_SOURCE="skipped"
      ;;
    *)
      echo "❌ Invalid choice. Skipping profile selection."
      export TARGET=""
      export TARGET_SOURCE="skipped"
      ;;
  esac
  echo ""
}

# Load configuration with priority:
# 1. .envrc.local (saved preference)
# 2. Environment variable (temporary override)
# 3. Interactive selection (if neither exists)
if [ -f ".envrc.local" ]; then
  source .envrc.local
  export TARGET_SOURCE="local config"
elif [ -n "$TARGET" ]; then
  export TARGET_SOURCE="environment"
else
  # Interactive selection
  select_profile
fi

# Add scripts directory to PATH if it exists
if [ -d "./scripts" ]; then
  PATH_add ./scripts
fi

# Make scripts executable if they exist
if [ -d "./scripts" ]; then
  chmod +x ./scripts/* 2>/dev/null
fi

# Show a message when entering the directory
echo "╭────────────────────────────────────────────────╮"
echo "│ 🛠️  Nix-Darwin Development Environment         │"
echo "╰────────────────────────────────────────────────╯"
echo ""
echo "   User: $CURRENT_USER"
if [ -n "$TARGET" ]; then
  echo "   Profile: $TARGET ($TARGET_SOURCE) ✅"
else
  echo "   Profile: Not configured ⚠️"
  echo ""
  echo "   💡 Tip: Run 'direnv reload' to select a profile interactively"
fi
echo ""
echo "   📦 Available commands:"
echo "   ├─ rebuild           → Apply ${TARGET:-[profile]} configuration"
echo "   ├─ rebuild-personal  → Apply personal profile"
echo "   ├─ rebuild-work      → Apply work profile"
echo "   ├─ build-test        → Test build without applying"
echo "   ├─ fmt               → Format all Nix files"
echo "   └─ check             → Validate flake configuration"
echo ""
echo "   🔧 Quick actions:"
if [ -n "$TARGET" ]; then
  echo "   • Switch profile: TARGET=<profile> direnv reload"
  echo "   • Current command: sudo darwin-rebuild switch --flake .#$TARGET"
else
  echo "   • Select profile: direnv reload"
  echo "   • Override: TARGET=personal rebuild"
fi
echo ""
echo "   📝 To reset saved profile: rm .envrc.local && direnv reload"
